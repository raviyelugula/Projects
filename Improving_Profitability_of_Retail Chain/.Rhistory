Prom_Sig_mode_df$F_Sig = ifelse(Prom_Sig_mode_df$FEATURE_PValue<=0.05,'F','')
Prom_Sig_mode_df$D_Sig = ifelse(Prom_Sig_mode_df$DISPLAY_PValue<=0.05,'D','')
Prom_Sig_mode_df$T_Sig = ifelse(Prom_Sig_mode_df$TPR_ONLY_PValue<=0.05,'T','')
Prom_Sig_mode_df=Prom_Sig_mode_df %>%
dplyr::select(c(1,9,10,11)) %>%
dplyr::mutate(Sig_modes = (F_Sig=='F')+(D_Sig=='D')+(T_Sig=='T')) %>%
dplyr::arrange(desc(Sig_modes))
View(Prom_Sig_mode_df)
temp = subset(rawdata_factors, UPC=='1600027527')
prod_data = temp %>%
select(WEEKEND_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
group_by(WEEKEND_DATE) %>%
mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
select(WEEKEND_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
arrange(WEEKEND_DATE)
require(readxl) # Excel-File reader
require(dplyr) # Data Manupulation
require(forecast) # Time Series
require(tidyr) # splits a col into two based on the regular expression
require(car) # to set un-ordered factors ranking method, helmert - baseline is one method rest referring to it
require(dummies) # to reacte dummy variables for factor data
require(ggplot2) # Visualization
require(usdm) # VIF
require(tseries) # ADF test
temp = subset(rawdata_factors, UPC=='1600027527')
prod_data = temp %>%
select(WEEKEND_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
group_by(WEEKEND_DATE) %>%
mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
select(WEEKEND_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
arrange(WEEKEND_DATE)
temp = subset(rawdata_factors, UPC=='1600027527')
prod_data = temp %>%
dplyr::select(WEEKEND_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
dplyr::group_by(WEEKEND_DATE) %>%
dplyr::mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEKEND_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
dplyr::mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
dplyr::arrange(WEEKEND_DATE)
names(rawdata_factors)
temp = subset(rawdata_factors, UPC=='1600027527')
prod_data = temp %>%
dplyr::select(WEEK_END_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
dplyr::mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
dplyr::arrange(WEEK_END_DATE)
temp = subset(rawdata_factors, UPC=='1600027527')
temp$FEATURE = as.factor(temp$FEATURE)
temp$DISPLAY = as.factor(temp$DISPLAY)
temp$TPR_ONLY = as.factor(temp$TPR_ONLY)
prod_data = temp %>%
dplyr::select(WEEK_END_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
dplyr::mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
dplyr::arrange(WEEK_END_DATE)
as.numeric(temp$FEATURE)
as.numeric(as.character(temp$FEATURE))
temp = subset(rawdata_factors, UPC=='1600027527')
temp$FEATURE = as.numeric(as.character(temp$FEATURE))
temp$DISPLAY = as.numeric(as.character(temp$DISPLAY))
temp$TPR_ONLY = as.numeric(as.character(temp$TPR_ONLY))
View(temp)
prod_data = temp %>%
dplyr::select(WEEK_END_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
dplyr::mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
dplyr::arrange(WEEK_END_DATE)
TS_data = ts(prod_data$W_TOTAL_SPEND, start = c(2009,1), end = c(2011,52), frequency = 52)
plot(TS_data)
Decomposition = decompose(TS_data)
Decomposition$seasonal
plot(Decomposition$seasonal)
prod_data$W_Seasonal = as.numeric(Decomposition$seasonal)
vif(data.frame(prod_data[,c(2,3,4,5,6,10)]))
vif(data.frame(prod_data[,c(2,3,4,6,10)])) # removing TPR_ONLY due to collinearity
LR_Model = lm(W_TOTAL_SPEND ~ W_BASE_PRICE+W_FEATURE+W_DISPLAY+W_Seasonal,
data = prod_data)
summary(LR_Model)
Coef = LR_Model$coefficients
Base_Line = Coef[1]+Coef[2]*(prod_data$W_BASE_PRICE)+(Coef[5]*prod_data$W_Seasonal)
INC = Coef[3]*(prod_data$W_FEATURE)+(Coef[4]*prod_data$W_DISPLAY)
prod_data$BASE_LINE = Base_Line
prod_data$INCREMENTAL = INC
P_Promo = subset(temp, FEATURE == 1 | DISPLAY == 1| TPR_ONLY == 1)
P_Promo = P_Promo %>%
dplyr::select(WEEKEND_DATE,SPEND) %>%
dplyr::group_by(WEEKEND_DATE) %>%
dplyr::mutate(W_PROMO_SPEND = sum(SPEND)) %>%
dplyr::select(WEEKEND_DATE,W_PROMO_SPEND) %>%
unique()
P_Promo = P_Promo %>%
dplyr::select(WEEK_END_DATE,SPEND) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_PROMO_SPEND = sum(SPEND)) %>%
dplyr::select(WEEK_END_DATE,W_PROMO_SPEND) %>%
unique()
prod_data = prod_data %>%
left_join(P_Promo, by = 'WEEK_END_DATE')
prod_data$P1_PE = prod_data$INCREMENTAL / prod_data$W_PROMO_SPEND *100
View(data.frame(A=prod_data$INCREMENTAL+prod_data$BASE_LINE, B=prod_data$W_TOTAL_SPEND , C= prod_data$W_TOTAL_SPEND-prod_data$INCREMENTAL-prod_data$BASE_LINE))
mean(prod_data$P1_PE,na.rm=T)
Product_PE_df = data.frame(numeric(),numeric())
Top_50sales_products = c('1600027527','3800031838','7192100339','1600027528',
'1600027564','3800031829','3800039118','7192100337',
'1111085350','88491201426','1111009477')
Product_PE_df = data.frame(numeric(),numeric())
for(Product in Top_50sales_products){
temp = subset(rawdata_factors, UPC==Product)
print(Product)
temp$FEATURE = as.numeric(as.character(temp$FEATURE))
temp$DISPLAY = as.numeric(as.character(temp$DISPLAY))
temp$TPR_ONLY = as.numeric(as.character(temp$TPR_ONLY))
prod_data = temp %>%
dplyr::select(WEEK_END_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
dplyr::mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
dplyr::arrange(WEEK_END_DATE)
TS_data = ts(prod_data$W_TOTAL_SPEND, start = c(2009,1), end = c(2011,52), frequency = 52)
#plot(TS_data)
Decomposition = decompose(TS_data)
#Decomposition$seasonal
#plot(Decomposition$seasonal)
prod_data$W_Seasonal = as.numeric(Decomposition$seasonal)
vif(data.frame(prod_data[,c(2,3,4,5,6,10)]))
vif(data.frame(prod_data[,c(2,3,4,6,10)])) # removing TPR_ONLY due to collinearity
LR_Model = lm(W_TOTAL_SPEND ~ W_BASE_PRICE+W_FEATURE+W_DISPLAY+W_Seasonal,
data = prod_data)
summary(LR_Model)
Coef = LR_Model$coefficients
Base_Line = Coef[1]+Coef[2]*(prod_data$W_BASE_PRICE)+(Coef[5]*prod_data$W_Seasonal)
INC = Coef[3]*(prod_data$W_FEATURE)+(Coef[4]*prod_data$W_DISPLAY)
prod_data$BASE_LINE = Base_Line
prod_data$INCREMENTAL = INC
P_Promo = subset(temp, FEATURE == 1 | DISPLAY == 1| TPR_ONLY == 1)
P_Promo = P_Promo %>%
dplyr::select(WEEK_END_DATE,SPEND) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_PROMO_SPEND = sum(SPEND)) %>%
dplyr::select(WEEK_END_DATE,W_PROMO_SPEND) %>%
unique()
prod_data = prod_data %>%
left_join(P_Promo, by = 'WEEK_END_DATE')
prod_data$P1_PE = prod_data$INCREMENTAL / prod_data$W_PROMO_SPEND *100
#View(data.frame(A=prod_data$INCREMENTAL+prod_data$BASE_LINE, B=prod_data$W_TOTAL_SPEND , C= prod_data$W_TOTAL_SPEND-prod_data$INCREMENTAL-prod_data$BASE_LINE))
Product_PE_df = rbind(Product_PE_df,data.frame(Product,mean(prod_data$P1_PE,na.rm=T)))
}
Top_50sales_products = c('1600027527','3800031838','7192100339','1600027528',
'1600027564','3800031829','3800039118','7192100337',
'1111085350',#'88491201426', - doen;t have enough data points
'1111009477')
Product_PE_df = data.frame(numeric(),numeric())
for(Product in Top_50sales_products){
temp = subset(rawdata_factors, UPC==Product)
print(Product)
temp$FEATURE = as.numeric(as.character(temp$FEATURE))
temp$DISPLAY = as.numeric(as.character(temp$DISPLAY))
temp$TPR_ONLY = as.numeric(as.character(temp$TPR_ONLY))
prod_data = temp %>%
dplyr::select(WEEK_END_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
dplyr::mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
dplyr::arrange(WEEK_END_DATE)
TS_data = ts(prod_data$W_TOTAL_SPEND, start = c(2009,1), end = c(2011,52), frequency = 52)
#plot(TS_data)
Decomposition = decompose(TS_data)
#Decomposition$seasonal
#plot(Decomposition$seasonal)
prod_data$W_Seasonal = as.numeric(Decomposition$seasonal)
vif(data.frame(prod_data[,c(2,3,4,5,6,10)]))
vif(data.frame(prod_data[,c(2,3,4,6,10)])) # removing TPR_ONLY due to collinearity
LR_Model = lm(W_TOTAL_SPEND ~ W_BASE_PRICE+W_FEATURE+W_DISPLAY+W_Seasonal,
data = prod_data)
summary(LR_Model)
Coef = LR_Model$coefficients
Base_Line = Coef[1]+Coef[2]*(prod_data$W_BASE_PRICE)+(Coef[5]*prod_data$W_Seasonal)
INC = Coef[3]*(prod_data$W_FEATURE)+(Coef[4]*prod_data$W_DISPLAY)
prod_data$BASE_LINE = Base_Line
prod_data$INCREMENTAL = INC
P_Promo = subset(temp, FEATURE == 1 | DISPLAY == 1| TPR_ONLY == 1)
P_Promo = P_Promo %>%
dplyr::select(WEEK_END_DATE,SPEND) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_PROMO_SPEND = sum(SPEND)) %>%
dplyr::select(WEEK_END_DATE,W_PROMO_SPEND) %>%
unique()
prod_data = prod_data %>%
left_join(P_Promo, by = 'WEEK_END_DATE')
prod_data$P1_PE = prod_data$INCREMENTAL / prod_data$W_PROMO_SPEND *100
#View(data.frame(A=prod_data$INCREMENTAL+prod_data$BASE_LINE, B=prod_data$W_TOTAL_SPEND , C= prod_data$W_TOTAL_SPEND-prod_data$INCREMENTAL-prod_data$BASE_LINE))
Product_PE_df = rbind(Product_PE_df,data.frame(Product,mean(prod_data$P1_PE,na.rm=T)))
}
colnames(Product_PE_df) = c('UPC','Promo_Effectiveness')
View(Product_PE_df)
Top_50sales_products = c('1600027527','3800031838','7192100339','1600027528',
'1600027564','3800031829','3800039118','7192100337',
'1111085350'#,'1111009477','88491201426', - don't have enough data points
)
Product_PE_df = data.frame(numeric(),numeric())
for(Product in Top_50sales_products){
temp = subset(rawdata_factors, UPC==Product)
print(Product)
temp$FEATURE = as.numeric(as.character(temp$FEATURE))
temp$DISPLAY = as.numeric(as.character(temp$DISPLAY))
temp$TPR_ONLY = as.numeric(as.character(temp$TPR_ONLY))
prod_data = temp %>%
dplyr::select(WEEK_END_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
dplyr::mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
dplyr::arrange(WEEK_END_DATE)
TS_data = ts(prod_data$W_TOTAL_SPEND, start = c(2009,1), end = c(2011,52), frequency = 52)
#plot(TS_data)
Decomposition = decompose(TS_data)
#Decomposition$seasonal
#plot(Decomposition$seasonal)
prod_data$W_Seasonal = as.numeric(Decomposition$seasonal)
vif(data.frame(prod_data[,c(2,3,4,5,6,10)]))
vif(data.frame(prod_data[,c(2,3,4,6,10)])) # removing TPR_ONLY due to collinearity
LR_Model = lm(W_TOTAL_SPEND ~ W_BASE_PRICE+W_FEATURE+W_DISPLAY+W_Seasonal,
data = prod_data)
summary(LR_Model)
Coef = LR_Model$coefficients
Base_Line = Coef[1]+Coef[2]*(prod_data$W_BASE_PRICE)+(Coef[5]*prod_data$W_Seasonal)
INC = Coef[3]*(prod_data$W_FEATURE)+(Coef[4]*prod_data$W_DISPLAY)
prod_data$BASE_LINE = Base_Line
prod_data$INCREMENTAL = INC
P_Promo = subset(temp, FEATURE == 1 | DISPLAY == 1| TPR_ONLY == 1)
P_Promo = P_Promo %>%
dplyr::select(WEEK_END_DATE,SPEND) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_PROMO_SPEND = sum(SPEND)) %>%
dplyr::select(WEEK_END_DATE,W_PROMO_SPEND) %>%
unique()
prod_data = prod_data %>%
left_join(P_Promo, by = 'WEEK_END_DATE')
prod_data$P1_PE = prod_data$INCREMENTAL / prod_data$W_PROMO_SPEND *100
#View(data.frame(A=prod_data$INCREMENTAL+prod_data$BASE_LINE, B=prod_data$W_TOTAL_SPEND , C= prod_data$W_TOTAL_SPEND-prod_data$INCREMENTAL-prod_data$BASE_LINE))
Product_PE_df = rbind(Product_PE_df,data.frame(Product,mean(prod_data$P1_PE,na.rm=T)))
}
colnames(Product_PE_df) = c('UPC','Promo_Effectiveness')
View(Product_PE_df)
storedata2 = rawdata_factors %>%
group_by(STORE_NUM) %>%
dplyr::select(STORE_NUM,STORE_NAME,ADDRESS_CITY_NAME,
ADDRESS_STATE_PROV_CODE,MSA_CODE,SEG_VALUE_NAME,
PARKING_SPACE_QTY,SALES_AREA_SIZE_NUM,AVG_WEEKLY_BASKETS) %>%
unique()
storedata1 = rawdata_factors %>%
group_by(STORE_NUM,WEEK_END_DATE) %>%
mutate(T_WEEKLY_SPEND1 = sum(SPEND),
T_WEEKLY_UNITS_SOLD1 = sum(UNITS),
T_WEEKLY_VISITS1 = sum(VISITS),
T_WEEKLY_HHS1 = sum(HHS)) %>%
dplyr::select(STORE_NUM,T_WEEKLY_SPEND1,T_WEEKLY_UNITS_SOLD1,
T_WEEKLY_VISITS1,T_WEEKLY_HHS1,WEEK_END_DATE) %>%
unique() %>%
group_by(STORE_NUM) %>%
mutate(AVG_WEEKLY_T_SPEND = mean(T_WEEKLY_SPEND1),
AVG_WEEKLY_T_UNITS_SOLD = mean(T_WEEKLY_UNITS_SOLD1),
AVG_WEEKLY_T_VISITS = mean(T_WEEKLY_VISITS1),
AVG_WEEKLY_T_HHS = mean(T_WEEKLY_HHS1)) %>%
dplyr::select(STORE_NUM,AVG_WEEKLY_T_SPEND,AVG_WEEKLY_T_UNITS_SOLD,
AVG_WEEKLY_T_VISITS,AVG_WEEKLY_T_HHS)  %>%
unique()
storedata = left_join(storedata1,storedata2,by='STORE_NUM')
rm(list = c('storedata1','storedata2'))
storedata$PARKING_FLAG = as.factor(ifelse(is.na(storedata$PARKING_SPACE_QTY),0,1))
storedata$PARKING_NEW = ifelse(is.na(storedata$PARKING_SPACE_QTY),0,storedata$PARKING_SPACE_QTY)
k_max = 10
names(storedata)
C_data = storedata[,c(15,12,13,4)] #PARKING_NEW,SALES_AREA_SIZE_NUM,AVG_WEEKLY_BASKETS,AVG_WEEKLY_T_VISITS
set.seed(1234)
wss = sapply(1:k_max,
function(k){kmeans(C_data, k, nstart=10,iter.max = 10 )$tot.withinss})
wss
plot(1:k_max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares",
main='Elbeow method using wss')
set.seed(1234)
storedata$C3=kmeans(storedata[,c(15,12,13,4)],centers = 3)$cluster
rm(C_data)
Clusterdata = storedata %>%
group_by(C3) %>%
mutate(AVG_WEEKLY_C_T_SPEND = mean(AVG_WEEKLY_T_SPEND),
AVG_WEEKLY_C_T_UNITS_SOLD = mean(AVG_WEEKLY_T_UNITS_SOLD),
AVG_WEEKLY_C_T_VISITS = mean(AVG_WEEKLY_T_VISITS),
AVG_WEEKLY_C_T_HHS = mean(AVG_WEEKLY_T_HHS),
AVG_WEEKLY_C_BASKETS = mean(AVG_WEEKLY_BASKETS),
SALES_AREA_C_SIZE_NUM = mean(SALES_AREA_SIZE_NUM),
NUM_STORE_WITH_PARKING = sum(as.numeric(PARKING_FLAG)),
NUM_STORES = n()) %>%
dplyr::select(C3,AVG_WEEKLY_C_T_SPEND,NUM_STORE_WITH_PARKING,
NUM_STORES,AVG_WEEKLY_C_T_HHS,AVG_WEEKLY_C_BASKETS,
AVG_WEEKLY_C_T_UNITS_SOLD,AVG_WEEKLY_C_T_VISITS,
SALES_AREA_C_SIZE_NUM) %>%
unique()
View(Clusterdata)
ggplot(storedata)+
geom_point(aes(x= SALES_AREA_SIZE_NUM,
y=AVG_WEEKLY_BASKETS,
color=as.factor(C3),
shape = as.factor(PARKING_FLAG),
size = AVG_WEEKLY_T_VISITS)) +
labs(title = "Store Cluster", x = "Store Area", y = "Average Weekly Baskets",
color = "Cluster", shape = "Parking Availability", size= "Average Weekly Visits")
plot(TS_data_forecast)
TS_data_forecast
TS_data_forecast$mean
P1= subset(rawdata_factors, UPC== '1600027527' )
as.numeric(P1$FEATURE)
as.numeric(as.character(P1$FEATURE))
NN_Product_list = c('1600027527','3800031838','3800039118')
i= 1
plot_list = list()
for(Product in NN_Product_list){
print(Product)
P1= subset(rawdata_factors, UPC== Product )
P1$FEATURE=as.numeric(as.character(P1$FEATURE))
P1$DISPLAY=as.numeric(as.character(P1$DISPLAY))
P1$TPR_ONLY=as.numeric(as.character(P1$TPR_ONLY))
P1_data = P1 %>%
dplyr::select(WEEK_END_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
group_by(WEEK_END_DATE) %>%
mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
arrange(WEEK_END_DATE)
#print(length(P1_data$W_TOTAL_SPEND))
TS_data = ts(P1_data$W_TOTAL_SPEND, start = c(2009,1), end = c(2011,52), frequency = 52)
TS_data_train = ts(P1_data$W_TOTAL_SPEND[1:117], start = c(2009,1), end = c(2011,17), frequency = 52)
TS_data_test = ts(P1_data$W_TOTAL_SPEND[118:156], start = c(2011,18), end = c(2011,52), frequency = 52)
#NNETS Model
NN_model = nnetar(TS_data)
forecast_12w = forecast(NN_model, h=12)
print(forecast_12w$mean)
y = c(2,3,4,5,6,7,8,9,10,11,12,13)
temp = data.frame(Spend = as.numeric(forecast_12w$mean), Week_No= y )
p=ggplot(temp,aes(Week_No,Spend))+
geom_line()+
geom_point()+
ggtitle(Product)
plot_list[[i]] = p
i= i+1
}
ARIMA_Product_list = c('7192100339',
'1600027528','1600027564','3800031829',
'7192100337','1111085350',
'88491201426','1111009477')
i= 4
for(Product in ARIMA_Product_list){
print(Product)
P1= subset(rawdata_factors, UPC== Product )
P1$FEATURE=as.numeric(P1$FEATURE)
P1$DISPLAY=as.numeric(P1$DISPLAY)
P1$TPR_ONLY=as.numeric(P1$TPR_ONLY)
P1_data = P1 %>%
dplyr::select(WEEK_END_DATE,SPEND,FEATURE,DISPLAY,TPR_ONLY,
BASE_PRICE,PRICE) %>%
group_by(WEEK_END_DATE) %>%
mutate(W_TOTAL_SPEND = sum(SPEND),
W_FEATURE = ifelse(sum(FEATURE)==0,0,1),
W_DISPLAY = ifelse(sum(DISPLAY)==0,0,1),
W_TPR_ONLY = ifelse(sum(FEATURE)==0,0,1),
W_BASE_PRICE = mean(BASE_PRICE),
W_PRICE = mean(PRICE)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_FEATURE,
W_DISPLAY,W_TPR_ONLY,W_BASE_PRICE,W_PRICE) %>%
unique()%>%
mutate(W_PROMO = ifelse(W_FEATURE+W_DISPLAY+W_TPR_ONLY == 0,0,1),
W_DISCOUNT = W_BASE_PRICE-W_PRICE )%>%
arrange(WEEK_END_DATE)
#print(length(P1_data$W_TOTAL_SPEND))
TS_data = ts(P1_data$W_TOTAL_SPEND, start = c(2009,1), end = c(2011,52), frequency = 52)
TS_data_train = ts(P1_data$W_TOTAL_SPEND[1:117], start = c(2009,1), end = c(2011,17), frequency = 52)
TS_data_test = ts(P1_data$W_TOTAL_SPEND[118:156], start = c(2011,18), end = c(2011,52), frequency = 52)
ARIMA_Full = auto.arima(TS_data)
Forecast_12W = forecast::forecast(ARIMA_Full, h=12 )
print(Forecast_12W$mean)
y = c(2,3,4,5,6,7,8,9,10,11,12,13)
temp = data.frame(Spend = as.numeric(forecast_12w$mean),Week_No = y )
p=ggplot(temp,aes(Week_No,Spend))+
geom_line()+
geom_point()+
ggtitle(Product)
plot_list[[i]] = p
i= i+1
}
grid.arrange(plot_list[[1]], plot_list[[2]],plot_list[[4]],plot_list[[5]],
ncol = 2, nrow = 2)
require(gridExtra)
grid.arrange(plot_list[[1]], plot_list[[2]],plot_list[[4]],plot_list[[5]],
ncol = 2, nrow = 2)
grid.arrange( plot_list[[6]], plot_list[[7]], plot_list[[3]],plot_list[[8]],
ncol = 2, nrow = 2)
grid.arrange(plot_list[[9]], plot_list[[10]], plot_list[[11]],
ncol = 1, nrow = 3)
names(rawdata_factors)
Weekly_Visit_data = rawdata_factors %>%
dplyr::select(WEEK_END_DATE,SPEND,VISITS) %>%
dplyr::group_by(WEEK_END_DATE) %>%
dplyr::mutate(W_TOTAL_SPEND = sum(SPEND),
W_TOTAL_VISIT = sum(VISITS)) %>%
dplyr::select(WEEK_END_DATE,W_TOTAL_SPEND,W_TOTAL_VISIT) %>%
unique()
names(Weekly_Visit_data)
Visit_Sales_model = lm(W_TOTAL_SPEND~W_TOTAL_VISIT, data = Weekly_Visit_data)
summary(Visit_Sales_model)
