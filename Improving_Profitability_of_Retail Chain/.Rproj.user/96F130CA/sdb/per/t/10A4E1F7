{
    "collab_server" : "",
    "contents" : "require(readxl) # read excel files\nrequire(dplyr)\nexcel_sheets('dunnhumby - Breakfast at the Frat.xlsx')\nrawdata = read_excel(path = 'dunnhumby - Breakfast at the Frat.xlsx', sheet = 'dh Transaction Data')\nnames(rawdata)\nrawStoreData = read_excel(path = 'dunnhumby - Breakfast at the Frat.xlsx', sheet = 'dh Store Lookup')\nrawdata = rawdata %>% \n              left_join(rawStoreData[which(!duplicated(rawStoreData$STORE_ID)),],\n                        by = c('STORE_NUM'='STORE_ID')) %>%\n              left_join(read_excel(path = 'dunnhumby - Breakfast at the Frat.xlsx', sheet = 'dh Products Lookup'),\n                        by = 'UPC')\nMissing_data_Check <- function(data_set){\n  NA_Count = sapply(data_set,function(y) sum(length(which(is.na(y))))) \n  Null_Count = sapply(data_set,function(y) sum(length(which(is.null(y)))))\n  Length0_Count = sapply(data_set,function(y) sum(length(which(length(y)==0))))\n  Empty_Count = sapply(data_set,function(y) {if(class(y) != 'Date') \n                                              return(sum(length(which(y==''))))\n                                            else return(0)})\n  Total_NonData = NA_Count+Null_Count+Length0_Count+Empty_Count\n  return( Total_NonData )\n}\nrawdata$WEEK_END_DATE = as.Date(rawdata$WEEK_END_DATE)\nMissing_data_Check(rawdata)\nglimpse(rawdata)\nnon_baseprice_missing_rawdata = rawdata[,1:25][!apply(rawdata[,9], 1, function(x) any(is.na(x))),] \nproduct_WeeklyAvg_basePrice = non_baseprice_missing_rawdata %>%\n                                select(WEEK_END_DATE,UPC,BASE_PRICE)%>%\n                                group_by(UPC,WEEK_END_DATE) %>%\n                                mutate(AVG_BASE_PRICE= round(mean(BASE_PRICE),2))\nproduct_WeeklyAvg_basePrice = unique(product_WeeklyAvg_basePrice[,-3])\nbaseprice_missing_rawdata = rawdata[,1:25][apply(rawdata[,9], 1, function(x) any(is.na(x))),] \nbaseprice_missing_rawdata = baseprice_missing_rawdata %>%\n                              left_join(product_WeeklyAvg_basePrice,by=c(\"WEEK_END_DATE\",\"UPC\"))\nbaseprice_missing_rawdata$BASE_PRICE = baseprice_missing_rawdata$AVG_BASE_PRICE\nrawdata_BasePrice = rbind(non_baseprice_missing_rawdata,baseprice_missing_rawdata[-26])\nrm(list = c('non_baseprice_missing_rawdata','product_WeeklyAvg_basePrice','baseprice_missing_rawdata'))\nnon_price_missing_rawdata = rawdata_BasePrice[,1:25][!apply(rawdata_BasePrice[,8], 1, function(x) any(is.na(x))),] \nproduct_WeeklyAvg_Price = non_price_missing_rawdata %>%\n                                select(WEEK_END_DATE,UPC,PRICE)%>%\n                                group_by(UPC,WEEK_END_DATE) %>%\n                                mutate(AVG_PRICE= round(mean(PRICE),2))\nproduct_WeeklyAvg_Price = unique(product_WeeklyAvg_Price[,-3])\nprice_missing_rawdata = rawdata_BasePrice[,1:25][apply(rawdata_BasePrice[,8], 1, function(x) any(is.na(x))),] \nprice_missing_rawdata = price_missing_rawdata %>%\n                              left_join(product_WeeklyAvg_Price,by=c(\"WEEK_END_DATE\",\"UPC\"))\nprice_missing_rawdata$PRICE = price_missing_rawdata$AVG_PRICE\nrawdata_BasePrice_Price = rbind(non_price_missing_rawdata,price_missing_rawdata[-26])\nrm(list = c('non_price_missing_rawdata','product_WeeklyAvg_Price','price_missing_rawdata','rawdata_BasePrice'))\nMissing_data_Check(rawdata_BasePrice_Price)\n\n\n\n\n",
    "created" : 1508780016461.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2605594164",
    "id" : "10A4E1F7",
    "lastKnownWriteTime" : 1508875406,
    "last_content_update" : 1508875406097,
    "path" : "~/GitHub/Projects/Improving_Profitability_of_Retail Chain/Breakfast_at_the_frat.R",
    "project_path" : "Breakfast_at_the_frat.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}