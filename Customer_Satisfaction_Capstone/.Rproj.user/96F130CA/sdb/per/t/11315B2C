{
    "collab_server" : "",
    "contents" : "### Focus       \t\t: Feature Additions and Realtion Analysis\n### CreatedOn   \t\t: 05-sep-2017 \n### Author      \t\t: Ravindranadh \n### Location    \t\t: GreatLakes Institute of Managment, Chennai\n### ProjectName \t\t: \n### Latest Revision : V 1.0\n\nrequire(plyr)\nrequire(dplyr)\nrequire(ggplot2)\nrequire(readxl)\nrequire(corrplot)\nrequire(RColorBrewer)\nrequire(usdm)\nrequire(psych)\nrequire(stringdist)\n\nbarColour = 'royalblue'\nbgColour = 'gray75'\n\npar(bg = bgColour)\n\n### Feature Additions - Factoring the Q Scores ----\nDataset$Q1Factor = as.factor(ifelse(Dataset$Q1 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q1 %in% c(4,5),'Satisfied',Dataset$Q1)))\nDataset$Q2Factor = as.factor(ifelse(Dataset$Q2 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q2 %in% c(4,5),'Satisfied',Dataset$Q2)))\nDataset$Q3Factor = as.factor(ifelse(Dataset$Q3 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q3 %in% c(4,5),'Satisfied',Dataset$Q3)))\nDataset$Q4Factor = as.factor(ifelse(Dataset$Q4 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q4 %in% c(4,5),'Satisfied',Dataset$Q4)))\nDataset$Q5Factor = as.factor(ifelse(Dataset$Q5 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q5 %in% c(4,5),'Satisfied',Dataset$Q5)))\nDataset$Q6Factor = as.factor(ifelse(Dataset$Q6 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q6 %in% c(4,5),'Satisfied',Dataset$Q6)))\nDataset$Q7Factor = as.factor(ifelse(Dataset$Q7 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q7 %in% c(4,5),'Satisfied',Dataset$Q7)))\nDataset$Q8Factor = as.factor(ifelse(Dataset$Q8 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q8 %in% c(4,5),'Satisfied',Dataset$Q8)))\nDataset$Q9Factor = as.factor(ifelse(Dataset$Q9 %in% c(1,2,3),'NotSatisfied',\n                                    ifelse(Dataset$Q9 %in% c(4,5),'Satisfied',Dataset$Q9)))\nDataset$Q10Factor = as.factor(ifelse(Dataset$Q10 %in% c(1,2,3),'NotSatisfied',\n                                     ifelse(Dataset$Q10 %in% c(4,5),'Satisfied',Dataset$Q10)))\n### Distribution analysis added features----\npar(mfrow=c(2,5),oma=c(0,0,2,0))\nfor(i in 1:10){\n  BarPlot(Dataset[i+29],i)\n}\ntitle(\"Frequency Distribution for all 10 Factored Questions\",outer = T)\npar(mfrow=c(1,1))\n### Correlation Analysis on Questions data ----\nQuestionNoMissing=Dataset[,18:28][!apply(Dataset[,18:28], 1, function(x) any(x==\"\" | is.na(x))),] \nrequire(corrplot)\nrequire(RColorBrewer)\nround(cor(QuestionNoMissing[1:10]),2)\ncorrplot(cor(QuestionNoMissing[1:10]), type=\"upper\",\n         method = 'circle' ,order=\"hclust\", add = F,\n         col=brewer.pal(n=4, name=\"RdBu\"),  \n         outline = T)\nrequire(usdm)\nvif(data.frame(QuestionNoMissing[1:10]))\nQuestionNoMissing_Sq= QuestionNoMissing[1:10]*QuestionNoMissing[1:10]\nvif(data.frame(QuestionNoMissing_Sq))\n\n### Factor Analysis on Non missing data set of 10 Questions ----\nrequire(psych)\npca = principal(QuestionNoMissing[1:10],nfactors = 10,rotate = 'none')\npca\nplot(pca$values,type=\"b\",col = barColour,\n     xlab = 'No of Principal Components',ylab = 'Engine Values',\n     main = 'Scree plot for all possible components') # Scree Plot\nabline(h = 1,col='orangered')\npca_reduced = principal(QuestionNoMissing[1:10], nfactors = 6, rotate = 'none')\npca_reduced\npca_rotated = principal(QuestionNoMissing[1:10], nfactors = 6, rotate = 'varimax')\npca_rotated\nround(pca_rotated$r.scores,5) # all rotated factors are orthogonal\n\nScaled_Satindex=scale(QuestionNoMissing[,11])\ncolnames(Scaled_Satindex)= c('Scaled_Satindex')\nQuestionNoMissing = cbind(QuestionNoMissing,pca_rotated$scores,Scaled_Satindex)\n\npca_reduced2 = principal(QuestionNoMissing[1:10], nfactors = 10, rotate = 'none')\npca_reduced2\n\npca_reduced2 = principal(QuestionNoMissing[1:10], nfactors = 2, rotate = 'none')\npca_reduced2\npca_rotated2 = principal(QuestionNoMissing[1:10], nfactors = 2, rotate = 'varimax')\npca_rotated2\npca_rotated3 = principal(QuestionNoMissing[1:10], nfactors = 2, rotate = 'quartimax')\npca_rotated3\npca_rotated4 = principal(QuestionNoMissing[1:10], nfactors = 2, rotate = 'bentlerT')\npca_rotated4\npca_rotated5 = principal(QuestionNoMissing[1:10], nfactors = 2, rotate = 'equamax')\npca_rotated5\npca_rotated6 = principal(QuestionNoMissing[1:10], nfactors = 2, rotate = 'varimin')\npca_rotated6\npca_rotated7 = principal(QuestionNoMissing[1:10], nfactors = 2, rotate = 'geominT')\npca_rotated7\npca_rotated8 = principal(QuestionNoMissing[1:10], nfactors = 2, rotate = 'bifactor')\npca_rotated8\n\n\nround(pca_rotated2$r.scores,5) # all rotated factors are orthogonal\n\nQuestionNoMissing2 = cbind(QuestionNoMissing[1:11],pca_rotated2$scores,Scaled_Satindex)\nround(cor(pca_reduced2$scores))\n\n### MultiLinear Regression ----\nformula = as.formula(paste(\"Scaled_Satindex ~\", \n                           paste(names(QuestionNoMissing[12:17]), collapse = \" + \")))\nLinear_regression = lm(formula,\n                       data = QuestionNoMissing)\nsummary(Linear_regression)\nplot(Linear_regression)\n\nformula2 = as.formula(paste(\"Scaled_Satindex ~\", \n                            paste(names(QuestionNoMissing2[12:13]), collapse = \" + \")))\nLinear_regression2 = lm(formula2,\n                        data = QuestionNoMissing2)\nsummary(Linear_regression2)\nplot(Linear_regression2)\n\n### LAsso Regression on non missing questions\nrequire(tidyverse)\ny = QuestionNoMissing$Satindex\nx = QuestionNoMissing %>% \n            dplyr::select(Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10) %>%\n            data.matrix()\nrequire(glmnet)\nLasso_regression = glmnet(x*x,y,alpha = 1)\nsummary(Lasso_regression)\nplot(Lasso_regression)\nLasso_CV = cv.glmnet(x*x,y,alpha = 1)\nplot(Lasso_CV)\nlambda_min = Lasso_CV$lambda.min\nlambda_min\nLasso_regression_lam = glmnet(x*x,y,alpha = 1,lambda = lambda_min)\nLasso_regression_lam$beta\n\n\nformula4 = as.formula(paste(\"Satindex ~\", \n                            paste(names(QuestionNoMissing[1:8]), collapse = \" + \")))\nLR = lm(formula4,\n        data = QuestionNoMissing)\nsummary(LR)\nPlanner_Sat_NonMissing_data = Dataset[,c(11,28)]\nPlanner_Sat_NonMissing=Planner_Sat_NonMissing_data[!apply(Planner_Sat_NonMissing_data, 1, function(x) any(x==\"\" | is.na(x))),] \nwrite.csv(Planner_Sat_NonMissing_data,'Planner_Sat_NonMissing_data.csv')\n\n### RF ###\nrequire(randomForest)\nRF_model = randomForest(x = QuestionNoMissing[,1:10],\n                        y = QuestionNoMissing$Satindex,\n                        data_set = QuestionNoMissing,\n                        ntree =  300,\n                        mtry =  4,\n                        nodesize = 300)\nRF_model\nplot(RF_model, main = \"High number of trees vs OOB error\")\nrequire(caret)\nset.seed(123)\ngrid_RF_tune = train(x = QuestionNoMissing[,1:10],\n                     y = QuestionNoMissing$Satindex,\n                     method = 'rf')\ngrid_RF_tune #gridsearch gives 16\n\n\n\n\n\n",
    "created" : 1506965532635.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2461099434",
    "id" : "11315B2C",
    "lastKnownWriteTime" : 1507541442,
    "last_content_update" : 1507541442245,
    "path" : "~/GitHub/Projects/Customer_Satisfaction_Capstone/Feature_Engineering.R",
    "project_path" : "Feature_Engineering.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}