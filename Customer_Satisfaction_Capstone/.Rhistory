install.packages('readxl')
require(readxl)
?readxl
excel_sheets('Workingdata.xlsx')
RawData = read_excel('Workingdata.xlsx',sheet ='data')
View(RawData)
names(RawData)
colnames(RawData)
WorkingData = RawData
names(WorkingData)
colnames(WorkingData) = c('Master_SNo','Financial_Year','FY.Quater',
'Year','Year.Month','Month','Y_M_SNo',
'DataBase','Notification_No','Location',
'Planner_Group_Code','Product','Notification_Type',
'Customer_Name','State','City_Final','City',
'Q1_Cost_Time_Estimation','Q2_Completion_notification_Advice',
'Q3_Genuine_Spare_Parts_Awareness','Q4_OnTime_Delivery',
'Q5_Cost','Q6_Overall_Experience','Q7_Staff_Courtesy',
'Q8_Convenience','Q9_Work_Satisfaction','Q10_Likely_Recommation',
'Satisfaction_Index','Remarks')
names(WorkingData)
View(WorkingData)
View(WorkingData)
class(WorkingData)
WorkingData = as.data.frame(WorkingData)
class(WorkingData)
Missing_data_Check <- function(data_set){
NA_Count = sapply(data_set,function(y) sum(length(which(is.na(y)))))
Null_Count = sapply(data_set,function(y) sum(length(which(is.null(y)))))
Length0_Count = sapply(data_set,function(y) sum(length(which(length(y)==0))))
Empty_Count = sapply(data_set,function(y) sum(length(which(y==''))))
Total_NonData = NA_Count+Null_Count+Length0_Count+Empty_Count
return( Total_NonData )
}
if(length(which(Missing_data_Check(WorkingData)>0))==0){
print("No Missing data")
}else{
which(Missing_data_Check(WorkingData)>0)
}
if(length(which(Missing_data_Check(WorkingData)>0))==0){
print("No Missing data")
}else{
which(Missing_data_Check(WorkingData)>0)
print('-------------')
Missing_data_Check(WorkingData)
}
if(length(which(Missing_data_Check(WorkingData)>0))==0){
print("No Missing data")
}else{
print('###################')
which(Missing_data_Check(WorkingData)>0)
print('-------------')
Missing_data_Check(WorkingData)
}
if(length(which(Missing_data_Check(WorkingData)>0))==0){
print("No Missing data")
}else{
#which(Missing_data_Check(WorkingData)>0)
table(Missing_data_Check(WorkingData))
}
if(length(which(Missing_data_Check(WorkingData)>0))==0){
print("No Missing data")
}else{
#which(Missing_data_Check(WorkingData)>0)
Missing_data_Check(WorkingData)
}
require(readxl)
Dataset = read_excel('Workingdata.xlsx')
names(Dataset)
colnames(Dataset) = c(colnames(Dataset[,1:17]),'Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',colnames(Dataset[,28]),'Remarks')
names(Dataset)
Missing_data_Check <- function(data_set){
NA_Count = sapply(data_set,function(y) sum(length(which(is.na(y)))))
Null_Count = sapply(data_set,function(y) sum(length(which(is.null(y)))))
Length0_Count = sapply(data_set,function(y) sum(length(which(length(y)==0))))
Empty_Count = sapply(data_set,function(y) sum(length(which(y==''))))
Total_NonData = NA_Count+Null_Count+Length0_Count+Empty_Count
return( Total_NonData )
}
Missing_Values = Missing_data_Check(Dataset)
MissingValuesPlot = barplot(Missing_Values,col = 'gray',
main ='Missing Values across all attributes',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlot, y = Missing_Values,
label = Missing_Values,col = "red", cex = 0.8)
axis(1, at=MissingValuesPlot, labels=names(Missing_Values),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
MissingValuesPlotQ = barplot(Missing_Values[18:27],col = 'gray',
main ='Missing responses for Questions',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlotQ, y = Missing_Values[18:27],
label = Missing_Values[18:27],col = "red", cex = 0.8)
axis(1, at=MissingValuesPlotQ, labels=names(Missing_Values[18:27]),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
missing_all = subset(Dataset, is.na(Dataset$Q1) &
is.na(Dataset$Q2)&
is.na(Dataset$Q3)&
is.na(Dataset$Q4)&
is.na(Dataset$Q5)&
is.na(Dataset$Q6)&
is.na(Dataset$Q7)&
is.na(Dataset$Q8)&
is.na(Dataset$Q9)&
is.na(Dataset$Q10))
missing_anyone = subset(Dataset, is.na(Dataset$Q1) |
is.na(Dataset$Q2)|
is.na(Dataset$Q3)|
is.na(Dataset$Q4)|
is.na(Dataset$Q5)|
is.na(Dataset$Q6)|
is.na(Dataset$Q7)|
is.na(Dataset$Q8)|
is.na(Dataset$Q9)|
is.na(Dataset$Q10))
Qdataset = Dataset[,18:27]
for(i in 1:10){
dataset_name = paste('missing_Q',i%%11,sep='')
temp = subset(Qdataset, is.na(Qdataset[i%%11])&
(!is.na(Qdataset[ifelse((i+1)%%10 == 0, 10 ,(i+1)%%10 )])&
!is.na(Qdataset[ifelse((i+2)%%10 == 0, 10 ,(i+2)%%10 )])&
!is.na(Qdataset[ifelse((i+3)%%10 == 0, 10 ,(i+3)%%10 )])&
!is.na(Qdataset[ifelse((i+4)%%10 == 0, 10 ,(i+4)%%10 )])&
!is.na(Qdataset[ifelse((i+5)%%10 == 0, 10 ,(i+5)%%10 )])&
!is.na(Qdataset[ifelse((i+6)%%10 == 0, 10 ,(i+6)%%10 )])&
!is.na(Qdataset[ifelse((i+7)%%10 == 0, 10 ,(i+7)%%10 )])&
!is.na(Qdataset[ifelse((i+8)%%10 == 0, 10 ,(i+8)%%10 )])&
!is.na(Qdataset[ifelse((i+9)%%10 == 0, 10 ,(i+9)%%10 )])))
assign(dataset_name, temp)
}
rm(temp)
Names = c('missing_all','missing_anyone','missing_Q1','missing_Q2','missing_Q3',
'missing_Q4','missing_Q5','missing_Q6','missing_Q7','missing_Q8',
'missing_Q9','missing_Q10')
for(i in 1:12){
j = nrow(noquote(names[i]))
}
for(i in 1:12){
j = nrow(noquote(Names[i]))
}
names(missing_all)
class(Missing_Values)
names(Missing_Values)
names(Missing_Values[3])
Obs_count <- function(data_set){
return(nrow(data_set))
}
Missing_Counts = NULL
for(i in 1:12){
Missing_Counts = c(Missing_Counts,Obs_count(Names[i]))
names(Missing_Counts[i+2])= Names[i]
}
Names[i]
names(Missing_Counts[i+2]) = Names[i]
names(Missing_Counts[1]) = Names[i]
Missing_Counts = NULL
for(i in 1:12){
Missing_Counts = c(Missing_Counts,Obs_count(Names[i]))
}
Missing_Counts
sapply(nrow,Names)
Names
sapply(Names,nrow)
sapply(Names,function(y) nrow(y))
sapply(Names,function(y) sum(nrow(y)))
sapply(Names,function(y) print(y))
sapply(Names,function(y) nrow(y))
nrow(missing_all)
Missing_Counts
Missing_Counts = c(nrow(missing_all),nrow(missing_anyone),nrow(missing_Q1),nrow(missing_Q2),nrow(missing_Q3),
nrow(missing_Q4),nrow(missing_Q5),nrow(missing_Q6),nrow(missing_Q7),nrow(missing_Q8),
nrow(missing_Q9),nrow(missing_Q10))
Missing_Counts
names(Missing_Counts) = Names
Missing_Counts
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlot, y = Missing_Counts,
label = Missing_Counts,col = "red", cex = 0.8)
axis(1, at=MissingValuesPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
length(MissingCountPlot)
length(Missing_Counts)
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlot, y = Missing_Counts,
label = Missing_Counts,col = "red", cex = 0.8)
axis(1, at=MissingValuesPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
names(Missing_Counts)
MissingValuesPlot
MissingValuesPlot
Missing_Counts
MissingValuesPlot
class(Missing_Counts)
Missing_Counts
MissingValuesPlotQ = barplot(Missing_Values[18:27],col = 'gray',
main ='Missing responses for Questions',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlotQ, y = Missing_Values[18:27],
label = Missing_Values[18:27],col = "red", cex = 0.8)
axis(1, at=MissingValuesPlotQ, labels=names(Missing_Values[18:27]),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
Missing_Counts = c(nrow(missing_all),nrow(missing_anyone),nrow(missing_Q1),nrow(missing_Q2),nrow(missing_Q3),
nrow(missing_Q4),nrow(missing_Q5),nrow(missing_Q6),nrow(missing_Q7),nrow(missing_Q8),
nrow(missing_Q9),nrow(missing_Q10))
Missing_Counts
names(Missing_Counts) = Names
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlot, y = Missing_Counts,
label = Missing_Counts,col = "red", cex = 0.8)
axis(1, at=MissingValuesPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingCountPlot, y = Missing_Counts,
label = Missing_Counts,col = "red", cex = 0.8)
axis(1, at=MissingCountPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
Qdataset_no_missing=Qdataset[!apply(Qdataset, 1, function(x) any(x=="" | is.na(x))),]
axis(1, at=MissingCountPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.8)
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingCountPlot, y = Missing_Counts,
label = Missing_Counts,col = "red", cex = 0.8)
axis(1, at=MissingCountPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.8)
?text
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingCountPlot, y = Missing_Counts,
label = Missing_Counts,col = "red", cex = 0.8,font = 2)
axis(1, at=MissingCountPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.8)
require(readxl)
Dataset = read_excel('Workingdata.xlsx')
names(Dataset)
colnames(Dataset) = c(colnames(Dataset[,1:17]),'Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',colnames(Dataset[,28]),'Remarks')
Missing_data_Check <- function(data_set){
NA_Count = sapply(data_set,function(y) sum(length(which(is.na(y)))))
Null_Count = sapply(data_set,function(y) sum(length(which(is.null(y)))))
Length0_Count = sapply(data_set,function(y) sum(length(which(length(y)==0))))
Empty_Count = sapply(data_set,function(y) sum(length(which(y==''))))
Total_NonData = NA_Count+Null_Count+Length0_Count+Empty_Count
return( Total_NonData )
}
Missing_Values = Missing_data_Check(Dataset)
MissingValuesPlot = barplot(Missing_Values,col = 'gray',
main ='Missing Values across all attributes',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlot, y = Missing_Values,
label = Missing_Values,col = "red", cex = 0.8)
axis(1, at=MissingValuesPlot, labels=names(Missing_Values),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
MissingValuesPlotQ = barplot(Missing_Values[18:27],col = 'gray',
main ='Missing responses for Questions',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlotQ, y = Missing_Values[18:27],
label = Missing_Values[18:27],col = "red", cex = 0.8)
axis(1, at=MissingValuesPlotQ, labels=names(Missing_Values[18:27]),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
missing_all = subset(Dataset, is.na(Dataset$Q1) &
is.na(Dataset$Q2)&
is.na(Dataset$Q3)&
is.na(Dataset$Q4)&
is.na(Dataset$Q5)&
is.na(Dataset$Q6)&
is.na(Dataset$Q7)&
is.na(Dataset$Q8)&
is.na(Dataset$Q9)&
is.na(Dataset$Q10))
missing_anyone = subset(Dataset, is.na(Dataset$Q1) |
is.na(Dataset$Q2)|
is.na(Dataset$Q3)|
is.na(Dataset$Q4)|
is.na(Dataset$Q5)|
is.na(Dataset$Q6)|
is.na(Dataset$Q7)|
is.na(Dataset$Q8)|
is.na(Dataset$Q9)|
is.na(Dataset$Q10))
Qdataset = Dataset[,18:27]
for(i in 1:10){
dataset_name = paste('missing_Q',i%%11,sep='')
temp = subset(Qdataset, is.na(Qdataset[i%%11])&
(!is.na(Qdataset[ifelse((i+1)%%10 == 0, 10 ,(i+1)%%10 )])&
!is.na(Qdataset[ifelse((i+2)%%10 == 0, 10 ,(i+2)%%10 )])&
!is.na(Qdataset[ifelse((i+3)%%10 == 0, 10 ,(i+3)%%10 )])&
!is.na(Qdataset[ifelse((i+4)%%10 == 0, 10 ,(i+4)%%10 )])&
!is.na(Qdataset[ifelse((i+5)%%10 == 0, 10 ,(i+5)%%10 )])&
!is.na(Qdataset[ifelse((i+6)%%10 == 0, 10 ,(i+6)%%10 )])&
!is.na(Qdataset[ifelse((i+7)%%10 == 0, 10 ,(i+7)%%10 )])&
!is.na(Qdataset[ifelse((i+8)%%10 == 0, 10 ,(i+8)%%10 )])&
!is.na(Qdataset[ifelse((i+9)%%10 == 0, 10 ,(i+9)%%10 )])))
assign(dataset_name, temp)
}
rm(temp)
Names = c('missing_all','missing_anyone','missing_Q1','missing_Q2','missing_Q3',
'missing_Q4','missing_Q5','missing_Q6','missing_Q7','missing_Q8',
'missing_Q9','missing_Q10')
Missing_Counts = c(nrow(missing_all),nrow(missing_anyone),nrow(missing_Q1),nrow(missing_Q2),nrow(missing_Q3),
nrow(missing_Q4),nrow(missing_Q5),nrow(missing_Q6),nrow(missing_Q7),nrow(missing_Q8),
nrow(missing_Q9),nrow(missing_Q10))
names(Missing_Counts) = Names
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingCountPlot, y = Missing_Counts,
label = Missing_Counts,col = "red", cex = 0.8,font = 2)
axis(1, at=MissingCountPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.8)
Qdataset_no_missing=Qdataset[!apply(Qdataset, 1, function(x) any(x=="" | is.na(x))),]
require(psych)
colnames(Qdataset_no_missing) = c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10')
Qdataset_no_missing=Qdataset[!apply(Qdataset, 1, function(x) any(x=="" | is.na(x))),]
names(Qdataset_no_missing)
require(psych)
pca = principal(Qdataset_no_missing,nfactors = ncol(Qdataset_no_missing),rotate = 'none')
pca
pca_reduced = principal(Qdataset_no_missing, nfactors = 1, rotate = 'none')
pca_reduced
pca_rotated = principal(Qdataset_no_missing, nfactors = 1, rotate = 'varimax')
pca_rotated
Correlation=cor(Qdataset_no_missing)
require(corrplot)
require(RColorBrewer)
corrplot(Correlation, type="upper",
method = 'circle' ,order="hclust", add = F,
col=brewer.pal(n=4, name="RdBu"),
outline = T)
install.packages("corrplot")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(corrplot)
library(RColorBrewer)
corrplot(Correlation, type="upper",
method = 'circle' ,order="hclust", add = F,
col=brewer.pal(n=4, name="RdBu"),
outline = T)
pca_rotated
Dataset_M = Dataset
require(readxl)
Dataset = read_excel('Workingdata.xlsx')
names(Dataset)
colnames(Dataset) = c(colnames(Dataset[,1:17]),'Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',colnames(Dataset[,28]),'Remarks')
Missing_data_Check <- function(data_set){
NA_Count = sapply(data_set,function(y) sum(length(which(is.na(y)))))
Null_Count = sapply(data_set,function(y) sum(length(which(is.null(y)))))
Length0_Count = sapply(data_set,function(y) sum(length(which(length(y)==0))))
Empty_Count = sapply(data_set,function(y) sum(length(which(y==''))))
Total_NonData = NA_Count+Null_Count+Length0_Count+Empty_Count
return( Total_NonData )
}
Missing_Values = Missing_data_Check(Dataset)
MissingValuesPlot = barplot(Missing_Values,col = 'gray',
main ='Missing Values across all attributes',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlot, y = Missing_Values,
label = Missing_Values,col = "red", cex = 0.8)
axis(1, at=MissingValuesPlot, labels=names(Missing_Values),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
MissingValuesPlotQ = barplot(Missing_Values[18:27],col = 'gray',
main ='Missing responses for Questions',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingValuesPlotQ, y = Missing_Values[18:27],
label = Missing_Values[18:27],col = "red", cex = 0.8)
axis(1, at=MissingValuesPlotQ, labels=names(Missing_Values[18:27]),
tick=FALSE, las=2, line=-0.5, cex.axis=0.5)
missing_all = subset(Dataset, is.na(Dataset$Q1) &
is.na(Dataset$Q2)&
is.na(Dataset$Q3)&
is.na(Dataset$Q4)&
is.na(Dataset$Q5)&
is.na(Dataset$Q6)&
is.na(Dataset$Q7)&
is.na(Dataset$Q8)&
is.na(Dataset$Q9)&
is.na(Dataset$Q10))
missing_anyone = subset(Dataset, is.na(Dataset$Q1) |
is.na(Dataset$Q2)|
is.na(Dataset$Q3)|
is.na(Dataset$Q4)|
is.na(Dataset$Q5)|
is.na(Dataset$Q6)|
is.na(Dataset$Q7)|
is.na(Dataset$Q8)|
is.na(Dataset$Q9)|
is.na(Dataset$Q10))
Qdataset = Dataset[,18:27]
for(i in 1:10){
dataset_name = paste('missing_Q',i%%11,sep='')
temp = subset(Qdataset, is.na(Qdataset[i%%11])&
(!is.na(Qdataset[ifelse((i+1)%%10 == 0, 10 ,(i+1)%%10 )])&
!is.na(Qdataset[ifelse((i+2)%%10 == 0, 10 ,(i+2)%%10 )])&
!is.na(Qdataset[ifelse((i+3)%%10 == 0, 10 ,(i+3)%%10 )])&
!is.na(Qdataset[ifelse((i+4)%%10 == 0, 10 ,(i+4)%%10 )])&
!is.na(Qdataset[ifelse((i+5)%%10 == 0, 10 ,(i+5)%%10 )])&
!is.na(Qdataset[ifelse((i+6)%%10 == 0, 10 ,(i+6)%%10 )])&
!is.na(Qdataset[ifelse((i+7)%%10 == 0, 10 ,(i+7)%%10 )])&
!is.na(Qdataset[ifelse((i+8)%%10 == 0, 10 ,(i+8)%%10 )])&
!is.na(Qdataset[ifelse((i+9)%%10 == 0, 10 ,(i+9)%%10 )])))
assign(dataset_name, temp)
}
rm(temp)
Names = c('missing_all','missing_anyone','missing_Q1','missing_Q2','missing_Q3',
'missing_Q4','missing_Q5','missing_Q6','missing_Q7','missing_Q8',
'missing_Q9','missing_Q10')
Missing_Counts = c(nrow(missing_all),nrow(missing_anyone),nrow(missing_Q1),nrow(missing_Q2),nrow(missing_Q3),
nrow(missing_Q4),nrow(missing_Q5),nrow(missing_Q6),nrow(missing_Q7),nrow(missing_Q8),
nrow(missing_Q9),nrow(missing_Q10))
names(Missing_Counts) = Names
MissingCountPlot = barplot(Missing_Counts,col = 'gray',
main ='Missing Value trend',
xlab = '',ylab = "Missing count",xaxt = 'n')
text(x = MissingCountPlot, y = Missing_Counts,
label = Missing_Counts,col = "red", cex = 0.8,font = 2)
axis(1, at=MissingCountPlot, labels=names(Missing_Counts),
tick=FALSE, las=2, line=-0.5, cex.axis=0.8)
Correlation=cor(Qdataset_no_missing)
require(corrplot)
Qdataset_no_missing=Qdataset[!apply(Qdataset, 1, function(x) any(x=="" | is.na(x))),]
Correlation=cor(Qdataset_no_missing)
require(corrplot)
require(RColorBrewer)
corrplot(Correlation, type="upper",
method = 'circle' ,order="hclust", add = F,
col=brewer.pal(n=4, name="RdBu"),
outline = T)
require(psych)
pca = principal(Qdataset_no_missing,nfactors = ncol(Qdataset_no_missing),rotate = 'none')
pca
pca_reduced = principal(Qdataset_no_missing, nfactors = 1, rotate = 'none')
pca_reduced
pca_rotated = principal(Qdataset_no_missing, nfactors = 1, rotate = 'varimax')
pca_rotated
Dataset_M = Dataset
Dataset_M[Dataset_M$State == Chattisgarh] = C
Dataset_M$State[Dataset_M$State == Chattisgarh] = C
Dataset_M$State[Dataset_M$State == 'Chattisgarh'] = C
Dataset_M[Dataset_M$State == 'Chattisgarh'] = C
Dataset_M$State == 'Chattisgarh'
Dataset_M$State[which(Dataset_M$State == 'Chattisgarh')] = C
Dataset_M[which(Dataset_M$State == 'Chattisgarh')]
which(Dataset_M$State == 'Chattisgarh')
Dataset_M[which(Dataset_M$State == 'Chattisgarh'),]
Dataset_M[which(Dataset_M$State == 'Chattisgarh'),'State']
Dataset_M[which(Dataset_M$State == 'Chattisgarh'),'State'] = 'Chhattisgarh'
Dataset_M[which(Dataset_M$State == 'Chattisgarh'),'State']
Dataset_M[which(Dataset_M$State == 'Chhattisgarh'),'State']
Dataset_M[which(Dataset_M$State == 'Orissa'),'State']
Dataset_M[which(Dataset_M$State == 'Orissa'),'State'] = 'Odisha'
Dataset_M[which(Dataset_M$State == 'Orissa'),'State']
Dataset_M[which(Dataset_M$State == 'Odisha'),'State']
Dataset_M[which(Dataset_M$State == 'W Bengal'),'State']
Dataset_M[which(Dataset_M$State == 'W Bengal'),'State'] = 'West Bengal'
Dataset_M[which(Dataset_M$State == 'West Bengal'),'State']
Dataset_M[which(Dataset_M$State == 'TN'),'State']
Dataset_M[which(Dataset_M$State == 'TN'),'State'] = 'Tamil Nadu'
Dataset_M[which(Dataset_M$State == 'Tamil Nadu'),'State']
Dataset_M[which(Dataset_M$State == 'Punjab & Haryana'),'State']
States_Cities = read_excel(path = 'Cities_States.xlsx', header = T)
States_Cities = read_excel(path = 'Cities_States.xlsx')
View(States_Cities)
States_Cities = toupper(States_Cities)
States_Cities = read_excel(path = 'Cities_States.xlsx')
States_Cities = read_excel(path = 'Cities_States.xlsx')
States_Cities$`Name of City` = toupper(States_Cities$`Name of City`)
States_Cities$State = toupper(States_Cities$State)
View(States_Cities)
View(States_Cities)
View(States_Cities)
States_Cities$`Name of City` = trimws(toupper(States_Cities$`Name of City`),which = 'both')
States_Cities = read_excel(path = 'Cities_States.xlsx')
States_Cities$`Name of City` = trimws(toupper(States_Cities$`Name of City`),which = 'both')
States_Cities$State = trimws(toupper(States_Cities$State),which = 'both')
View(States_Cities)
Dataset_M$State = trimws(toupper(Dataset_M$State),which = 'both')
Dataset_M$State = trimws(toupper(Dataset_M$State),which = 'both')
Dataset_M$Location = trimws(toupper(Dataset_M$Location),which = 'both')
View(Dataset_M)
